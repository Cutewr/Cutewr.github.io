"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[3524],{1709:(i,s,a)=>{a.d(s,{l:()=>t});const t={category:{"/":{path:"/category/",map:{数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[0]},Linux:{path:"/category/linux/",indexes:[1]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[2,3,4,5,6,7]},SpringBoot:{path:"/category/springboot/",indexes:[8,9]},指南:{path:"/category/%E6%8C%87%E5%8D%97/",indexes:[10]},中间件:{path:"/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",indexes:[11]},云原生:{path:"/category/%E4%BA%91%E5%8E%9F%E7%94%9F/",indexes:[12,13,14]},软件配置:{path:"/category/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/",indexes:[15]},计算机网络:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",indexes:[16,17]},操作系统:{path:"/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",indexes:[18,19,20]},MySQL:{path:"/category/mysql/",indexes:[21,22,23,24]},Java:{path:"/category/java/",indexes:[25,26]},Java基础:{path:"/category/java%E5%9F%BA%E7%A1%80/",indexes:[27]},Java集合:{path:"/category/java%E9%9B%86%E5%90%88/",indexes:[28]},刷题笔记:{path:"/category/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/",indexes:[29,30,31,32,33,34,35,36,37]},面试复盘:{path:"/category/%E9%9D%A2%E8%AF%95%E5%A4%8D%E7%9B%98/",indexes:[38,39,40]},排序算法:{path:"/category/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",indexes:[41,42]}}}},tag:{"/":{path:"/tag/",map:{MongoDB:{path:"/tag/mongodb/",indexes:[0]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",indexes:[1]},原理:{path:"/tag/%E5%8E%9F%E7%90%86/",indexes:[8,9]},源码:{path:"/tag/%E6%BA%90%E7%A0%81/",indexes:[8,9]},禁用:{path:"/tag/%E7%A6%81%E7%94%A8/",indexes:[4]},加密:{path:"/tag/%E5%8A%A0%E5%AF%86/",indexes:[5]},布局:{path:"/tag/%E5%B8%83%E5%B1%80/",indexes:[10]},Markdown:{path:"/tag/markdown/",indexes:[6]},页面配置:{path:"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[7]},使用指南:{path:"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[7]},RPC:{path:"/tag/rpc/",indexes:[11]},docker:{path:"/tag/docker/",indexes:[12,13]},k8s:{path:"/tag/k8s/",indexes:[12,14]},图床搭建:{path:"/tag/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/",indexes:[15]},Github:{path:"/tag/github/",indexes:[15]},分层模型:{path:"/tag/%E5%88%86%E5%B1%82%E6%A8%A1%E5%9E%8B/",indexes:[16]},分层协议:{path:"/tag/%E5%88%86%E5%B1%82%E5%8D%8F%E8%AE%AE/",indexes:[17]},文件管理:{path:"/tag/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/",indexes:[18]},内存管理:{path:"/tag/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",indexes:[19]},进程:{path:"/tag/%E8%BF%9B%E7%A8%8B/",indexes:[20]},MySQL基础:{path:"/tag/mysql%E5%9F%BA%E7%A1%80/",indexes:[21]},索引:{path:"/tag/%E7%B4%A2%E5%BC%95/",indexes:[22]},日志:{path:"/tag/%E6%97%A5%E5%BF%97/",indexes:[23]},事务:{path:"/tag/%E4%BA%8B%E5%8A%A1/",indexes:[24]},JVM:{path:"/tag/jvm/",indexes:[27]},Java基础:{path:"/tag/java%E5%9F%BA%E7%A1%80/",indexes:[26]},数组:{path:"/tag/%E6%95%B0%E7%BB%84/",indexes:[34]},哈希表:{path:"/tag/%E5%93%88%E5%B8%8C%E8%A1%A8/",indexes:[35]},链表:{path:"/tag/%E9%93%BE%E8%A1%A8/",indexes:[36]},栈和队列:{path:"/tag/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/",indexes:[29]},双指针:{path:"/tag/%E5%8F%8C%E6%8C%87%E9%92%88/",indexes:[30]},树:{path:"/tag/%E6%A0%91/",indexes:[31]},图:{path:"/tag/%E5%9B%BE/",indexes:[32]},归并算法:{path:"/tag/%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/",indexes:[33]},堆:{path:"/tag/%E5%A0%86/",indexes:[33]},矩阵:{path:"/tag/%E7%9F%A9%E9%98%B5/",indexes:[37]},算法:{path:"/tag/%E7%AE%97%E6%B3%95/",indexes:[38]},八股:{path:"/tag/%E5%85%AB%E8%82%A1/",indexes:[39]},项目:{path:"/tag/%E9%A1%B9%E7%9B%AE/",indexes:[40]},快速排序:{path:"/tag/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/",indexes:[41,42]},选择排序:{path:"/tag/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/",indexes:[42]},冒泡排序:{path:"/tag/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/",indexes:[42]},堆排序:{path:"/tag/%E5%A0%86%E6%8E%92%E5%BA%8F/",indexes:[42]},归并排序:{path:"/tag/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/",indexes:[42]},桶排序:{path:"/tag/%E6%A1%B6%E6%8E%92%E5%BA%8F/",indexes:[42]}}}}}},4776:(i,s,a)=>{a.d(s,{M:()=>t});const t=["/DataBase/MongoDB.html","/Linux/Linux%20%E6%A6%82%E8%BF%B0%E5%8F%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html","/SpringBoot/","/demo/","/demo/disable.html","/demo/encrypt.html","/demo/markdown.html","/demo/page.html","/SpringBoot/SpringBoot%E5%86%85%E5%B5%8Cweb%E5%AE%B9%E5%99%A8.html","/SpringBoot/SpringBoot%E5%86%85%E5%B5%8Cweb%E5%AE%B9%E5%99%A82.html","/demo/layout.html","/posts/RPC.html","/%E4%BA%91%E5%8E%9F%E7%94%9F/docker%E5%92%8Ck8s%E7%9A%84%E5%8C%BA%E5%88%AB.html","/%E4%BA%91%E5%8E%9F%E7%94%9F/docker%E5%92%8C%E4%BC%A0%E7%BB%9F%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%8C%BA%E5%88%AB.html","/%E4%BA%91%E5%8E%9F%E7%94%9F/k8s.html","/%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2/Github_picGo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.html","/408/ComputerNetwork/Part.html","/408/ComputerNetwork/protocol.html","/408/OS/file.html","/408/OS/memory.html","/408/OS/process.html","/DataBase/MySQL/1basic.html","/DataBase/MySQL/2index.html","/DataBase/MySQL/3log.html","/DataBase/MySQL/4transaction.html","/posts/Java/JUC.html","/posts/Java/JavaBasic.html","/posts/Java/JVM.html","/posts/Java/JavaCollection.html","/posts/LCNotes/5stack.html","/posts/LCNotes/6double.html","/posts/LCNotes/7tree.html","/posts/LCNotes/8graph.html","/posts/LCNotes/K-wayMerge.html","/posts/LCNotes/1array.html","/posts/LCNotes/3hash.html","/posts/LCNotes/4linkedlist.html","/posts/LCNotes/matrix.html","/posts/interview/algorithm.html","/posts/interview/knows.html","/posts/interview/project.html","/posts/LCNotes/Sort/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9F%BA%E5%87%86%E9%80%89%E5%8F%96%E5%8F%8A%E4%BC%98%E5%8C%96.html","/posts/LCNotes/Sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93.html","/intro.html"]},3781:(i,s,a)=>{a.d(s,{U:()=>t});const t={article:{"/":{path:"/article/",indexes:[8,9,0,12,13,14,15,16,17,18,19,20,21,22,23,24,29,30,31,32,33,41,42,43,2,3,4,5,10,6,1,11,25,27,28,34,35,36,37,38,39,40,26,7]}},star:{"/":{path:"/star/",indexes:[37,7]}},timeline:{"/":{path:"/timeline/",indexes:[8,9,0,12,13,14,15,16,17,18,19,20,21,22,23,24,29,30,31,32,33,41,42,43,2,3,4,5,10,6,1,11,25,27,28,34,35,36,37,38,39,40,26,7]}}}},3600:(i,s,a)=>{a.d(s,{B:()=>Q});var t={};a.r(t);var e={};a.r(e);var n={};a.r(n),a.d(n,{default:()=>B});var l={};a.r(l),a.d(l,{default:()=>w});var h={};a.r(h),a.d(h,{default:()=>N});var p=a(8278),r=a(3812),d=a(3073),k=a(9403),o=a(596),g=a(8831);const B=(0,p.re)({enhance:({app:i})=>{(0,r.L4)("FontIcon")||i.component("FontIcon",k.A),(0,r.L4)("Badge")||i.component("Badge",o.A),(0,r.L4)("VPCard")||i.component("VPCard",g.A)},setup:()=>{(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]});var A=a(6358),c=a(9588),E=a(355),m=a(1599),y=a(5496),u=a(5284),b=a(457),v=a(7152),C=a(5214),F=a(1219),x=a(3027),D=a(2763),f=a(9589);const w=(0,p.re)({enhance:({app:i})=>{i.component("CodeTabs",v.A),(0,r.L4)("CodeGroup",i)||i.component("CodeGroup",C.lF),(0,r.L4)("CodeGroupItem",i)||i.component("CodeGroupItem",C.E7),i.component("CodeDemo",F.A),i.component("MdDemo",x.A),i.component("Tabs",f.A)},setup:()=>{(0,D.p)()}});var L=a(3004),M=a(783),S=a(8465),J=a(641),I=a(8030),j=a(9920);(0,S.M_)((i=>{const s=i.t,a=!1!==i.I,t=i.i;return a?{title:s,content:t?()=>[(0,J.h)(M.GB,{icon:t}),s]:null,order:i.O,index:i.I}:null}));const N=(0,p.re)({enhance:({app:i,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...i)=>(await M.lE.wait(),a(...i)),(0,M.fk)(i),i.component("HopeIcon",M.GB),i.component("BloggerInfo",I.tI),i.component("SocialMedias",I.rS),i.component("GlobalEncrypt",j.J),i.component("LocalEncrypt",j.n)},setup:()=>{(0,M.PV)(),(0,M.i$)(),(0,I.su)()},layouts:{Layout:M.PE,NotFound:M.Mk,BlogCategory:I.Pn,BlogHome:I.qX,BlogType:I.z7,Timeline:I.Kf}}),Q=[t,e,n,A,c,E,m,y,u,b,l,L,h].map((i=>i.default)).filter(Boolean)},8164:(i,s,a)=>{a.d(s,{J:()=>e,c:()=>t});const t=JSON.parse('{"/%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2/Github+picGo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.html":"/%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2/Github_picGo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.html"}'),e=Object.fromEntries([["/",{loader:()=>a.e(4470).then(a.bind(a,4298)),meta:{t:"Cutewr's Blog",i:"home"}}],["/intro.html",{loader:()=>a.e(3912).then(a.bind(a,3086)),meta:{d:1724811921e3,e:"\n<h2>教育经历</h2>\n<h3>华中科技大学</h3>\n<p>计算机科学与技术 硕士 2023.9~2026.6</p>\n<h3>中南大学</h3>\n<p>计算机科学与技术 本科 2019.9~2026.6</p>\n<h2>专业技能</h2>\n<ul>\n<li>熟悉Java基础知识，集合及底层数据结构等，具有良好的编码习惯</li>\n<li>了解JVM，包括内存结构、垃圾回收机制、垃圾回收器等</li>\n<li>了解JUC井发编程，包括synchronized关键字、Reentrantlock、线程池、ThreadLocal等知识</li>\n<li>有良好的计算机网络和操作系统基础，包括网络分层模型及相关协议、进程管理、内存管理等知识</li>\n<li>熟悉MySQL数据库的基本操作 ，了解索引、事务、日志、常见并发控制机制、MVCC等</li>\n<li>掌握Redis的基本使用，了解基本数据类型、持久化策略、缓存穿透、击穿、雪崩的原因及常用解决方案</li>\n<li>熟练使用Spring、SpringMVC、SpringBoot、MyBatis等开发框架</li>\n</ul>",r:{minutes:.8,words:239},t:"介绍页",i:"circle-info",y:"a"}}],["/DataBase/MongoDB.html",{loader:()=>a.e(776).then(a.bind(a,1504)),meta:{d:17248896e5,l:"2024年8月29日",c:["数据库"],g:["MongoDB"],e:"\n",r:{minutes:.04,words:11},t:"MongoDB",y:"a"}}],["/Linux/Linux%20%E6%A6%82%E8%BF%B0%E5%8F%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",{loader:()=>a.e(7864).then(a.bind(a,7808)),meta:{d:17248032e5,l:"2024年8月28日",c:["Linux"],g:["基础"],e:"<h2>一、入门概述</h2>\n<h3>1、我们为什么要学习Linux</h3>\n<p>Linux 诞生了很多年了，以前人们还喊着要取代 Windows 系统，但现在这个口号已经小多了。</p>\n<p>有个词叫 大势所趋，任何事物的发展都有其局限性，都有其天花板。如果你想在国内再搞一个社交产品取代 QQ 和微信，也只能想想而已，基本不再可能。因为用户已经习惯于使用微信和 QQ 交流，不是说技术上实现不了，而是老百姓已经习惯了原来的产品，即使他们自己不用旧产品，亲戚朋友还是要用，这是一件没有办法的事情。</p>\n<p>同理，用惯了 Windows 操作系统，再让大家强行切换到别的操作系统上基本上是不可能的事情，改变一个人的习惯太难了。但是，即使 Linux 没有办法深入到普通老百姓的生活中，也并不意味着 Linux 就没有用武之地了。在服务器端，在开发领域里，Linux 反而是越来越受欢迎，很多程序员不懂点 Linux 都觉得不好意思，Linux 在开源社区的地位依然是龙头老大。</p>",r:{minutes:11.22,words:3367},t:"",y:"a"}}],["/SpringBoot/",{loader:()=>a.e(4170).then(a.bind(a,1754)),meta:{d:1724811921e3,c:["使用指南"],r:{minutes:.05,words:14},t:"SpringBoot",i:"laptop-code",y:"a"}}],["/SpringBoot/SpringBoot%E5%86%85%E5%B5%8Cweb%E5%AE%B9%E5%99%A8.html",{loader:()=>a.e(5881).then(a.bind(a,3011)),meta:{d:1724918468e3,c:["SpringBoot"],g:["原理","源码"],e:"\n<h2>前言</h2>\n<p>今天分享一个SpringBoot的内嵌Web容器，在SpringBoot还没有出现时，我们使用Java开发了Web项目，需要将其部署到Tomcat下面，需要配置很多xml文件，SpringBoot出现后，就从繁琐的xml文件中解脱出来了，SpringBoot将Web容器进行了内嵌，我们只需要将项目打成一个jar包，就可以运行了，大大省略了开发成本，那么SpringBoot是怎么实现的呢，我们今天就来详细介绍。</p>\n<h2>SpringBoot提供的内嵌容器</h2>\n<p>SpringBoot提供了四种Web容器，分别为Tomcat，Jetty，Undertow，Netty。</p>",r:{minutes:8.8,words:2641},t:"一文了解SpringBoot内嵌web容器",O:1,y:"a"}}],["/SpringBoot/SpringBoot%E5%86%85%E5%B5%8Cweb%E5%AE%B9%E5%99%A82.html",{loader:()=>a.e(4691).then(a.bind(a,8440)),meta:{d:1724918468e3,c:["SpringBoot"],g:["原理","源码"],e:"<h2>前言</h2>\n<p>​    最近在学习Spring Boot相关的课程，过程中以笔记的形式记录下来，方便以后回忆，同时也在这里和大家探讨探讨，文章中有漏的或者有补充的、错误的都希望大家能够及时提出来，本人在此先谢谢了！</p>\n<blockquote>\n<p>开始之前呢，希望大家带着几个问题去学习：</p>\n<p>1、Spring Boot 嵌入式Web容器是什么？</p>\n<p>2、整体流程或结构是怎样的？</p>\n<p>3、核心部分是什么？</p>\n<p>4、怎么实现的？</p>\n<p>这是对自我的提问，我认为带着问题去学习，是一种更好的学习方式，有利于加深理解。好了，接下来进入主题。</p>\n</blockquote>",r:{minutes:9.84,words:2951},t:"一文了解SpringBoot内嵌web容器||",O:2,y:"a"}}],["/demo/",{loader:()=>a.e(3320).then(a.bind(a,2410)),meta:{d:1724811921e3,c:["使用指南"],r:{minutes:.07,words:22},t:"主要功能与配置演示",i:"laptop-code",y:"a"}}],["/demo/disable.html",{loader:()=>a.e(2756).then(a.bind(a,7383)),meta:{d:1724811921e3,c:["使用指南"],g:["禁用"],e:"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n",r:{minutes:.43,words:128},t:"布局与功能禁用",i:"gears",O:4,y:"a"}}],["/demo/encrypt.html",{loader:()=>a.e(2581).then(a.bind(a,4429)),meta:{d:1724811921e3,c:["使用指南"],g:["加密"],n:!0,r:{minutes:.51,words:154},t:"密码加密的文章",i:"lock",y:"a"}}],["/demo/layout.html",{loader:()=>a.e(6216).then(a.bind(a,6361)),meta:{d:1724811921e3,c:["指南"],g:["布局"],e:'<p>布局包括:</p>\n<ul>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/navbar.html" target="_blank" rel="noopener noreferrer">导航栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html" target="_blank" rel="noopener noreferrer">侧边栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/footer.html" target="_blank" rel="noopener noreferrer">页脚</a></li>\n</ul>',r:{minutes:.53,words:159},t:"布局",i:"object-group",O:2,y:"a"}}],["/demo/markdown.html",{loader:()=>a.e(8711).then(a.bind(a,3209)),meta:{d:1724811921e3,c:["使用指南"],g:["Markdown"],e:"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n",r:{minutes:3.51,words:1053},t:"Markdown 展示",i:"fab fa-markdown",O:2,y:"a"}}],["/demo/page.html",{loader:()=>a.e(645).then(a.bind(a,2242)),meta:{a:"Ms.Hope",d:15778368e5,l:"2020年1月1日",c:["使用指南"],g:["页面配置","使用指南"],e:"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n",r:{minutes:1.76,words:529},t:"页面配置",i:"file",O:3,y:"a"}}],["/posts/RPC.html",{loader:()=>a.e(3845).then(a.bind(a,6880)),meta:{d:17248032e5,l:"2024年8月28日",c:["中间件"],g:["RPC"],e:"\n<h2>基本概念</h2>\n<h3>什么是RPC?</h3>\n<p>专业定义：RPC（Remote Procedure Call）即远程过程调用，是一种计算机通信协议，它允许程序在不同的计算机之间进行通信和交互，就像本地调用一样。</p>\n<h3>为什么需要RPC</h3>\n<p>RPC允许一个程序（称为服务消费者）像调用自己程序的方法一样，调用另一个程序（称为服务提供者）的接口，而不需要了解数据的传输处理过程、底层网络通信的细节等。这些都会由 RPC框架帮你完成，使得开发者可以轻松调用远程服务，快速开发分布式系统。</p>\n<p>我的代码的目标，是能快速得到一个 支持远程调用provider的 代理对象，像调用本地方法一样调用provider的方法。</p>",r:{minutes:1,words:300},t:"RPC",i:"pen-to-square",y:"a"}}],["/%E4%BA%91%E5%8E%9F%E7%94%9F/docker%E5%92%8Ck8s%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(2363).then(a.bind(a,3174)),meta:{d:17248896e5,l:"2024年8月29日",c:["云原生"],g:["docker","k8s"],e:"\n<p>作为一个程序员，如果你想安装一个 <code>vim</code> 编辑下文本，在不同环境里你得执行不同的命令。 在 ubuntu，你需要执行 <code>apt-get install vim</code>，在 centos 里，你需要执行 <code>yum install vim</code>.</p>\n<p>装个小软件尚且如此，要是你想将自己写的代码部署到各个不同操作系统的服务器上，那依赖的软件和配置就更多了，需要针对每个环境单独写一套部署脚本。\n难受，太难受了。</p>\n<p>那么问题就来了，有没有更好的解决方案？\n当然有，<strong>没有什么是加一层中间层不能解决的，如果有，那就再加一层</strong>，这次我们要加的中间层是 <strong>Docker</strong>。</p>",r:{minutes:14.6,words:4381},t:"docker和k8s的区别",y:"a"}}],["/%E4%BA%91%E5%8E%9F%E7%94%9F/docker%E5%92%8C%E4%BC%A0%E7%BB%9F%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(4023).then(a.bind(a,9289)),meta:{d:17248896e5,l:"2024年8月29日",c:["云原生"],g:["docker"],e:"\n<p>我有一个程序员朋友，他每年情人节都要送女朋友一台服务器。</p>\n<p>他说：“谁不想在过节当天收到一台 4 核 8g 的服务器呢？”</p>\n<p>“万一对方不要，我还能留着自己用。”\n给他一次过节的机会，他能把<strong>浪漫</strong>玩的明明白白。\n所以今年情人节，他自己一个人过。\n太痛了，是那种<strong>布洛芬都不知道他哪里痛</strong>的痛。</p>\n<p>虽然人跑了，但起码还有服务器陪着他，但屏幕前依然单身的你呢？\n<strong>你连服务器都没有</strong>。\n那么问题就来了，你买过服务器吗？看着云厂商各种产品是不是有点懵。\n你知道 ecs，vps，docker 容器 是什么吗？它们有啥区别呢？</p>",r:{minutes:6.34,words:1903},t:"docker和传统虚拟机的区别",y:"a"}}],["/%E4%BA%91%E5%8E%9F%E7%94%9F/k8s.html",{loader:()=>a.e(7388).then(a.bind(a,9858)),meta:{d:17248896e5,l:"2024年8月29日",c:["云原生"],g:["k8s"],e:'\n<p>你是一个程序员，你用代码写了一个博客应用服务，并将它部署在了云平台上。\n但应用服务太过受欢迎，访问量太大，经常会挂。</p>\n<figure><img src="https://cdn.jsdelivr.net/gh/Cutewr/blogimage@main/img/1709421004186.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<p>所以你用了一些工具自动重启挂掉的应用服务，并且将应用服务部署在了好几个服务器上，总算扛住了。</p>\n<p><img src="https://cdn.jsdelivr.net/gh/Cutewr/blogimage@main/img/image-20240829175746893.png" alt="image-20240829175746893" loading="lazy">\n后来你又上线了商城应用服务和语音应用服务，随着<strong>应用服务变多</strong>，需求也千奇百怪。有的应用服务不希望被外网访问到，有的部署的时候要求内存得大于 xxGB 才能正常跑。\n你每次都需要登录到各个服务器上，执行<strong>手动</strong>操作更新。不仅容易出错，还贼<strong>浪费时间</strong>。</p>',r:{minutes:8.1,words:2430},t:"一文讲解Kubernetes",y:"a"}}],["/%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2/Github_picGo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.html",{loader:()=>a.e(4530).then(a.bind(a,9950)),meta:{d:17248896e5,l:"2024年8月29日",c:["软件配置"],g:["图床搭建","Github"],e:'\n<p><strong>Github做图床十分靠谱！！有CDN加速访问巨快！！</strong></p>\n<p><strong>别担心不稳定！别担心访问慢！这些问题统统不存在。</strong></p>\n<h2><strong>1. 注册一个Github账号</strong></h2>\n<p>首先你需要一个github账号，如果没有的话，先注册。</p>\n<p>github官网地址： <a href="https://link.zhihu.com/?target=https%3A//github.com/" target="_blank" rel="noopener noreferrer">https://github.com/</a></p>',r:{minutes:3.88,words:1164},t:"使用Github+picGo搭建图床",y:"a"}}],["/408/ComputerNetwork/Part.html",{loader:()=>a.e(410).then(a.bind(a,6076)),meta:{d:17248896e5,l:"2024年8月29日",c:["计算机网络"],g:["分层模型"],e:'\n<h2>OSI七层模型</h2>\n<figure><img src="https://cdn.jsdelivr.net/gh/Cutewr/blogimage@main/img/image-20240829215831870.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>\n<h2>TCP/IP 四层模型是什么？每一层的作用是什么？</h2>\n<p>四层主要指的是：网络接口层、互联网层、传输层和应用层。</p>\n<ol>\n<li>网络接口层负责在计算机和网络硬件之间传输数据</li>\n<li>网络层 通过IP 协议提供数据包的路由和转发</li>\n<li>传输层通过TCP 和 UDP 协议提供端到端的通信服务</li>\n<li>应用层通过各种协议提供网络应用程序的功能</li>\n</ol>',r:{minutes:1.05,words:314},t:"计算机网络分层模型",y:"a"}}],["/408/ComputerNetwork/protocol.html",{loader:()=>a.e(6543).then(a.bind(a,3331)),meta:{d:17248896e5,l:"2024年8月29日",c:["计算机网络"],g:["分层协议"],e:"\n<h2>应用层常见的协议</h2>\n<h3>HTTP（Hypertext Transfer Protocol，超文本传输协议）</h3>\n<p>主要是为 Web 浏览器与 Web 服务器之间的通信而设计的。客户端向服务器发送 HTTP Request（请求），服务器响应请求并返回 HTTP Response（响应）。</p>\n<p>HTTP 协议基于 TCP 协议，发送 HTTP 请求之前首先要建立 TCP 连接也就是要经历 3 次握手。目前使用的 HTTP 协议大部分都是 <strong>1.1</strong>。在 1.1 的协议里面，默认是开启了 <strong>Keep-Alive</strong> 的，这样的话建立的连接就可以在多次请求中被复用了。</p>",r:{minutes:45.85,words:13754},t:"计算机网络各层协议",y:"a"}}],["/408/OS/file.html",{loader:()=>a.e(9388).then(a.bind(a,8240)),meta:{d:17248896e5,l:"2024年8月29日",c:["操作系统"],g:["文件管理"],e:"\n",r:{minutes:.07,words:22},t:"操作系统文件管理",y:"a"}}],["/408/OS/memory.html",{loader:()=>a.e(1065).then(a.bind(a,3368)),meta:{d:17248896e5,l:"2024年8月29日",c:["操作系统"],g:["内存管理"],e:"\n",r:{minutes:.07,words:22},t:"操作系统内存管理",y:"a"}}],["/408/OS/process.html",{loader:()=>a.e(1909).then(a.bind(a,6190)),meta:{d:17248896e5,l:"2024年8月29日",c:["操作系统"],g:["进程"],e:"\n",r:{minutes:.07,words:20},t:"操作系统进程管理",y:"a"}}],["/DataBase/MySQL/1basic.html",{loader:()=>a.e(3988).then(a.bind(a,7206)),meta:{d:17248896e5,l:"2024年8月29日",c:["MySQL"],g:["MySQL基础"],e:"\n",r:{minutes:.04,words:13},t:"MySQL基础",y:"a"}}],["/DataBase/MySQL/2index.html",{loader:()=>a.e(7837).then(a.bind(a,72)),meta:{d:17248896e5,l:"2024年8月29日",c:["MySQL"],g:["索引"],e:"\n",r:{minutes:.04,words:12},t:"MySQL索引",y:"a"}}],["/DataBase/MySQL/3log.html",{loader:()=>a.e(9802).then(a.bind(a,2980)),meta:{d:17248896e5,l:"2024年8月29日",c:["MySQL"],g:["日志"],e:"\n",r:{minutes:.04,words:12},t:"MySQL日志",y:"a"}}],["/DataBase/MySQL/4transaction.html",{loader:()=>a.e(1923).then(a.bind(a,5701)),meta:{d:17248896e5,l:"2024年8月29日",c:["MySQL"],g:["事务"],e:"\n",r:{minutes:.04,words:12},t:"MySQL事务",y:"a"}}],["/posts/Java/JUC.html",{loader:()=>a.e(6569).then(a.bind(a,8677)),meta:{d:17248032e5,l:"2024年8月28日",c:["Java"],e:"\n<h1>基本概念</h1>\n<h1>Java中的线程安全是什么意思？</h1>\n<p>多线程环境下，不会出现多个线程访问时造成数据的错误、丢失等不一致问题。</p>\n<h1>并行和并发</h1>\n<p>并行：在多处理器系统中同时执行多个任务。</p>\n<p>并发：在单处理器系统中通过任务切换来实现某个时间段内的多个任务的“同时”进行。</p>\n<h1>同步和异步</h1>\n<p>同步操作需要等待任务完成后才能继续执行。</p>\n<p>异步操作则不需要等待任务完成，可以继续执行其他任务，提高系统的效率。</p>\n<h1>线程安全实现方式</h1>\n<ol>\n<li>原子操作：不可分割的操作，避免了多线程同时修改数据的问题，例如 CAS 就是一个原子操作。</li>\n<li>锁机制：如互斥锁、读写锁等，保证同一时刻只有一个线程能够访问共享资源。例如 synchronized 或者 ReentrantLock</li>\n<li>并发控制：如信号量、条件变量等，控制线程的执行顺序来保证线程安全。例如 Semaphore、CountDownLatch。</li>\n</ol>",r:{minutes:71.26,words:21377},t:"JUC并发编程",y:"a"}}],["/posts/Java/JVM.html",{loader:()=>a.e(9428).then(a.bind(a,1003)),meta:{d:17248032e5,l:"2024年8月28日",c:["Java基础"],g:["JVM"],e:"\n<h2>基础知识</h2>\n<h3>什么是JVM</h3>\n<p>JVM是一种规范，JVM调优是针对JVM规范参数的调优</p>\n<p>JVM，也就是 Java 虚拟机，它是 Java 实现跨平台的基石。</p>\n<p>Java 程序运行的时候，编译器会将 Java 源代码（.java）编译成操作系统无关的 Java 字节码文件（.class），接下来对应操作系统的 JVM 会对字节码文件进行解释，翻译成对应平台的机器指令并运行。</p>\n<h3>Java是如何实现跨平台的？</h3>\n<p>跨平台指的是在不同的硬件或操作系统上，Java代码都能运行。Java代码运行需要先编译成.class字节码文件，再通过JVM转换成对应操作系统认识的二进制指令，JVM针对不同硬件和平台做了对应的开发，是的Java语言是跨平台的。</p>",r:{minutes:31.5,words:9449},t:"JVM",y:"a"}}],["/posts/Java/JavaBasic.html",{loader:()=>a.e(7525).then(a.bind(a,805)),meta:{d:16413408e5,l:"2022年1月5日",c:["Java"],g:["Java基础"],e:"\n<h2>JVM、JRE、JDK有什么区别</h2>\n<p>JVM是java虚拟机，负责将字节码解释或编译为本地机器代码，并在运行时提供必要的支持，比如内存管理、垃圾回收等等</p>\n<p>JRE是java运行时环境，包括了jvm、核心类库和其他支持运行java程序的文件。</p>\n<p>JDK是用于开发Java程序的完整运行环境，包含了JRE，以及用于开发、调试和监控java应用程序的工具。</p>\n<h2>Java从编译到执行，经过了哪些步骤？</h2>\n<ol>\n<li>我认为就4个步骤：编译-&gt;加载-&gt;解释-&gt;执行。编译：将源码文件编译成JVM可以解释的class文件。编译过程会对源代码程序做 「语法分析」「语义分析」「注解处理」等等处理，最后才生成字节码文件。比如对泛型的擦除干的。</li>\n<li>加载：class文件加载到JVM中，加载又可以分为加载、连接、初始化</li>\n<li>解释：JVM通过解释或者编译将字节码转换为机器码</li>\n<li>执行：最后操作系统把解释器解析出来的机器代码，调用系统的硬件执行最终的程序指令</li>\n</ol>",r:{minutes:36.91,words:11072},t:"Java基础",y:"a"}}],["/posts/Java/JavaCollection.html",{loader:()=>a.e(8523).then(a.bind(a,383)),meta:{d:17248032e5,l:"2024年8月28日",c:["Java集合"],e:"\n<h1>Java集合概览</h1>\n<h2>介绍一下Java中的集合框架</h2>\n<p>Java 集合，主要是由两大接口派生而来：一个是 Collection接口；另一个是 Map 接口。Collection 接口，下面又有三个子接口：List、Set 、 Queue。</p>\n<p>List中常见的实现类有：ArrayList和LinkedList两个；Set接口实现常见类有HashSet、LinkedHashSet、TreeSet；Queue接口的实现类有PriorityQueue优先级队列。</p>\n<p>Map接口常见的实现类有HashMap、LinkedHashMap、TreeMap、Hashtable、ConcurrentHashMap。</p>",r:{minutes:28.57,words:8570},t:"Java集合",y:"a"}}],["/posts/LCNotes/1array.html",{loader:()=>a.e(4467).then(a.bind(a,4494)),meta:{d:17248032e5,l:"2024年8月28日",c:["刷题笔记"],g:["数组"],e:'\n<h1>二分查找【LC 704题】</h1>\n<blockquote>\n<p>我们一般定义查找区间的时候，要么是左闭右开[left,right)，要么是左闭右闭[left,right]。</p>\n<p>在修改区间范围的时候，一定要坚持这个区间的开闭准则</p>\n</blockquote>\n<ol>\n<li>左闭右闭[left,right]的写法</li>\n</ol>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#000000;--shiki-dark:#FFFFFF"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">rray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //左闭右闭写法</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> left</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,right</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (left</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">right){    </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//注意点一：由于是左闭右闭区间，所以当left=right时，区间内还有元素</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(left</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">right)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (nums[mid]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">target) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mid;  </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            // 注意点二 如果mid不符合条件，从区间内剔除</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (nums[mid]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">target) right</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> left</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:13.64,words:4092},t:"数组",y:"a"}}],["/posts/LCNotes/3hash.html",{loader:()=>a.e(6910).then(a.bind(a,9714)),meta:{d:17248032e5,l:"2024年8月28日",c:["刷题笔记"],g:["哈希表"],e:"\n<h2>两数之和【LC 1题】</h2>\n<p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出 <strong>和为目标值</strong> <code>*target*</code> 的那 <strong>两个</strong> 整数，并返回它们的数组下标。</p>\n<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>\n<p>你可以按任意顺序返回答案。</p>\n<aside>\n💡 解题思路：找出nums[i]以及另一个target-nums[i]的数。因为要返回数组下标，所以使用哈希表，key存nums值，value存下标值。\n</aside>",r:{minutes:7.77,words:2330},t:"哈希表",y:"a"}}],["/posts/LCNotes/4linkedlist.html",{loader:()=>a.e(6574).then(a.bind(a,3380)),meta:{d:17248032e5,l:"2024年8月28日",c:["刷题笔记"],g:["链表"],e:'\n<h2>移除链表元素【LC 203题】</h2>\n<p>给你一个链表的头节点 <code>head</code> 和一个整数 <code>val</code> ，请你删除链表中所有满足 <code>Node.val == val</code> 的节点，并返回 <strong>新的头节点</strong> 。</p>\n<aside>\n💡 两种做法：\n<p>1、不添加虚拟头结点</p>\n<p>2、添加虚拟头结点</p>\n</aside>\n<p>方法一：注意可能前几个节点的值都是val，因此要用while循环删除头结点</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 不使用虚拟头结点</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ListNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeElements</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> val) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">val) head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cur</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (cur</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 除了处理头结点要使用while循环，处理后续节点也要使用while循环，来去除连续的val节点</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">val) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        cur</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:19.69,words:5906},t:"链表",y:"a"}}],["/posts/LCNotes/5stack.html",{loader:()=>a.e(7946).then(a.bind(a,1036)),meta:{d:17248896e5,l:"2024年8月29日",c:["刷题笔记"],g:["栈和队列"],e:"\n<h2>用栈实现队列【LC 232题】</h2>\n<p>请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（<code>push</code>、<code>pop</code>、<code>peek</code>、<code>empty</code>）：</p>\n<p>实现 <code>MyQueue</code> 类：</p>\n<ul>\n<li><code>void push(int x)</code> 将元素 x 推到队列的末尾</li>\n<li><code>int pop()</code> 从队列的开头移除并返回元素</li>\n<li><code>int peek()</code> 返回队列开头的元素</li>\n<li><code>boolean empty()</code> 如果队列为空，返回 <code>true</code> ；否则，返回 <code>false</code></li>\n</ul>",r:{minutes:5.25,words:1576},t:"栈和队列",y:"a"}}],["/posts/LCNotes/6double.html",{loader:()=>a.e(3720).then(a.bind(a,4322)),meta:{d:17248896e5,l:"2024年8月29日",c:["刷题笔记"],g:["双指针"],e:'\n<h2>移动零【LC 283题】</h2>\n<p>给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。\n请注意 ，必须在不复制数组的情况下原地对数组进行操作。</p>\n<blockquote>\n<p>💡 使用一个开始的指针flag来记录下一个非零元素放置的位置。遍历数组，如果数不为0，那么交换它开始元素的位置，并使flag++。</p>\n</blockquote>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Solution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> moveZeroes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> flag</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;i++){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> temp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nums[i];</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                nums[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nums[flag];</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                nums[flag]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">temp;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                flag++;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.97,words:890},t:"双指针",y:"a"}}],["/posts/LCNotes/7tree.html",{loader:()=>a.e(8686).then(a.bind(a,2542)),meta:{d:17248896e5,l:"2024年8月29日",c:["刷题笔记"],g:["树"],e:"\n<h2>二叉树的递归遍历【LC 144 145 94题】</h2>\n<p>递归序</p>\n<p>按照如下函数，遍历完每个节点都会经过三次。</p>\n<p>以下图为例：首先经过<strong>recursion(2)</strong>-&gt;<strong>recursion(1)</strong>-&gt;recursion(1.left)【null 返回】-&gt;<strong>recursion(1)</strong></p>\n<ul>\n<li>\n<blockquote>\n<p>recursion(1.right)【null 返回】-&gt;<strong>recursion(1)</strong>&gt;<strong>recursion(2)</strong>【返回】</p>\n</blockquote>\n</li>\n<li>\n<blockquote>\n<p><strong>recursion(3)</strong>&gt;recursion(3.left)【null 返回】-&gt;<strong>recursion(3)</strong></p>\n</blockquote>\n</li>\n<li>\n<blockquote>\n<p>recursion(3.right)【null 返回】-&gt;<strong>recursion(3)</strong>&gt;<strong>recursion(2)</strong>【最终返回，方法执行完】</p>\n</blockquote>\n</li>\n</ul>",r:{minutes:29.67,words:8900},t:"树",y:"a"}}],["/posts/LCNotes/8graph.html",{loader:()=>a.e(6791).then(a.bind(a,7703)),meta:{d:17248896e5,l:"2024年8月29日",c:["刷题笔记"],g:["图"],e:'\n<p>图的表示方式</p>\n<ol>\n<li>邻接表</li>\n<li>邻接矩阵</li>\n</ol>\n<p>稀疏图适合用邻接表，稠密图适合用邻接矩阵</p>\n<h2>岛屿数量【LC 200题】</h2>\n<p>一个矩阵中只有0和1两种值，每个位置都可以和自己的上、下、左、右 四个位置相连，如果有一片1连在一起，这个部分叫做一个岛，求一个矩阵中有多少个岛？\n【举例】\n001010\n111010\n100100\n000000\n这个矩阵中有三个岛</p>\n<aside>\n💡 遍历这个数组，如果遇到1的位置，就把res++。然后调用infect函数，把周围相邻的1都设置成0。\n</aside>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> NumIslands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> numIslands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[][] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">grid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (grid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> res</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> N</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">grid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> M</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">grid[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">N;i++){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">M;j++){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (grid[i][j]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    res++;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                    infect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grid,i,j,N,M);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> res;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> infect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[][] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">grid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">      //我只关心这个1能在我和我的周围传递下去，如果不能就直接返回</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">      // 注意这个判断条件 不等于1 也传递不下去了 不要忘了</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">N </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">M </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> grid[i][j]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        grid[i][j]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        infect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grid,i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,j,N,M);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        infect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grid,i,j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,N,M);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        infect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grid,i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,j,N,M);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        infect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grid,i,j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,N,M);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:9.61,words:2883},t:"图",y:"a"}}],["/posts/LCNotes/K-wayMerge.html",{loader:()=>a.e(8206).then(a.bind(a,7198)),meta:{d:17248896e5,l:"2024年8月29日",c:["刷题笔记"],g:["归并算法","堆"],e:"\n",r:{minutes:.06,words:19},t:"多路归并",y:"a"}}],["/posts/LCNotes/matrix.html",{loader:()=>a.e(8426).then(a.bind(a,2218)),meta:{d:17248032e5,l:"2024年8月28日",c:["刷题笔记"],g:["矩阵"],e:'\n<h2>矩阵置零【LC 73题】</h2>\n<p>给定一个&nbsp;<code>*m* x *n*</code>&nbsp;的矩阵，如果一个元素为&nbsp;<strong>0</strong>&nbsp;，则将其所在行和列的所有元素都设为&nbsp;<strong>0</strong>&nbsp;。请使用&nbsp;<a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank" rel="noopener noreferrer"><strong>原地</strong></a>&nbsp;算法**。**</p>',r:{minutes:5.73,words:1718},t:"矩阵【二维数组】",y:"a"}}],["/posts/interview/algorithm.html",{loader:()=>a.e(9763).then(a.bind(a,534)),meta:{d:17248032e5,l:"2024年8月28日",c:["面试复盘"],g:["算法"],n:!0,r:{minutes:.25,words:75},t:"算法题",y:"a"}}],["/posts/interview/knows.html",{loader:()=>a.e(734).then(a.bind(a,6771)),meta:{d:17248032e5,l:"2024年8月28日",c:["面试复盘"],g:["八股"],n:!0,r:{minutes:7.99,words:2396},t:"八股问答",y:"a"}}],["/posts/interview/project.html",{loader:()=>a.e(1975).then(a.bind(a,4197)),meta:{d:17248032e5,l:"2024年8月28日",c:["面试复盘"],g:["项目"],n:!0,r:{minutes:.05,words:16},t:"项目问答",y:"a"}}],["/posts/LCNotes/Sort/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9F%BA%E5%87%86%E9%80%89%E5%8F%96%E5%8F%8A%E4%BC%98%E5%8C%96.html",{loader:()=>a.e(3534).then(a.bind(a,3432)),meta:{d:17248896e5,l:"2024年8月29日",c:["排序算法"],g:["快速排序"],e:"\n<h2>快速排序的基本原理</h2>\n<p>关于快速排序，它的基本思想就是选取一个基准，一趟排序确定两个区间，一个区间全部比基准值小，另一个区间全部比基准值大，接着再选取一个基准值来进行排序，以此类推，最后得到一个有序的数列。</p>\n<h3>快速排序的基本思路</h3>\n<ol>\n<li>选取基准值，通过不同的方式挑选出基准值。</li>\n<li>用分治的思想进行分割，通过该基准值在序列中的位置，将序列分成两个区间，在准值左边的区间里的数都比基准值小（默认以升序排序），在基准值右边的区间里的数都比基准值大。</li>\n<li>递归调用快速排序的函数对两个区间再进行上两步操作，直到调用的区间为空或是只有一个数。</li>\n</ol>",r:{minutes:11.98,words:3594},t:"快速排序的索引选取及优化",y:"a"}}],["/posts/LCNotes/Sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93.html",{loader:()=>a.e(5127).then(a.bind(a,9581)),meta:{d:17248896e5,l:"2024年8月29日",c:["排序算法"],g:["快速排序","选择排序","冒泡排序","堆排序","归并排序","桶排序"],e:'\n<h2>总结</h2>\n<figure><img src="https://cdn.jsdelivr.net/gh/Cutewr/blogimage@main/img/1719586939154-afa18ea5-d7e4-48d1-a968-c12f52dcb9e0.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<h2>选择排序</h2>\n<p><a href="https://www.runoob.com/w3cnote/selection-sort.html" target="_blank" rel="noopener noreferrer">选择排序</a></p>',r:{minutes:4.07,words:1222},t:"排序算法总结",y:"a"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,4510)),meta:{t:""}}],["/DataBase/",{loader:()=>a.e(9766).then(a.bind(a,7954)),meta:{t:"Data Base"}}],["/Linux/",{loader:()=>a.e(9979).then(a.bind(a,2121)),meta:{t:"Linux"}}],["/posts/",{loader:()=>a.e(8666).then(a.bind(a,8290)),meta:{t:"Posts"}}],["/%E4%BA%91%E5%8E%9F%E7%94%9F/",{loader:()=>a.e(9956).then(a.bind(a,1e3)),meta:{t:"云原生"}}],["/%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2/",{loader:()=>a.e(5459).then(a.bind(a,9825)),meta:{t:"其他博客"}}],["/408/ComputerNetwork/",{loader:()=>a.e(6475).then(a.bind(a,4420)),meta:{t:"Computer Network"}}],["/408/",{loader:()=>a.e(917).then(a.bind(a,5785)),meta:{t:"408"}}],["/408/OS/",{loader:()=>a.e(7592).then(a.bind(a,275)),meta:{t:"OS"}}],["/DataBase/MySQL/",{loader:()=>a.e(1387).then(a.bind(a,9360)),meta:{t:"My SQL"}}],["/posts/Java/",{loader:()=>a.e(9055).then(a.bind(a,8898)),meta:{t:"Java"}}],["/posts/LCNotes/",{loader:()=>a.e(5175).then(a.bind(a,6354)),meta:{t:"LCNotes"}}],["/posts/interview/",{loader:()=>a.e(238).then(a.bind(a,2098)),meta:{t:"Interview"}}],["/posts/LCNotes/Sort/",{loader:()=>a.e(3636).then(a.bind(a,9059)),meta:{t:"Sort"}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,905)),meta:{t:"分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>a.e(3863).then(a.bind(a,3688)),meta:{t:"数据库 分类",I:!1}}],["/category/linux/",{loader:()=>a.e(8654).then(a.bind(a,7758)),meta:{t:"Linux 分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(4021).then(a.bind(a,4581)),meta:{t:"使用指南 分类",I:!1}}],["/category/springboot/",{loader:()=>a.e(4829).then(a.bind(a,5539)),meta:{t:"SpringBoot 分类",I:!1}}],["/category/%E6%8C%87%E5%8D%97/",{loader:()=>a.e(8622).then(a.bind(a,5573)),meta:{t:"指南 分类",I:!1}}],["/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",{loader:()=>a.e(7281).then(a.bind(a,2789)),meta:{t:"中间件 分类",I:!1}}],["/category/%E4%BA%91%E5%8E%9F%E7%94%9F/",{loader:()=>a.e(3313).then(a.bind(a,667)),meta:{t:"云原生 分类",I:!1}}],["/category/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(4130).then(a.bind(a,4464)),meta:{t:"软件配置 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(8387).then(a.bind(a,5416)),meta:{t:"计算机网络 分类",I:!1}}],["/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{loader:()=>a.e(8411).then(a.bind(a,7014)),meta:{t:"操作系统 分类",I:!1}}],["/category/mysql/",{loader:()=>a.e(1006).then(a.bind(a,1611)),meta:{t:"MySQL 分类",I:!1}}],["/category/java/",{loader:()=>a.e(8236).then(a.bind(a,6955)),meta:{t:"Java 分类",I:!1}}],["/category/java%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(2878).then(a.bind(a,5094)),meta:{t:"Java基础 分类",I:!1}}],["/category/java%E9%9B%86%E5%90%88/",{loader:()=>a.e(2194).then(a.bind(a,1212)),meta:{t:"Java集合 分类",I:!1}}],["/category/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(7919).then(a.bind(a,2395)),meta:{t:"刷题笔记 分类",I:!1}}],["/category/%E9%9D%A2%E8%AF%95%E5%A4%8D%E7%9B%98/",{loader:()=>a.e(8884).then(a.bind(a,7248)),meta:{t:"面试复盘 分类",I:!1}}],["/category/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",{loader:()=>a.e(9207).then(a.bind(a,3682)),meta:{t:"排序算法 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,4103)),meta:{t:"标签",I:!1}}],["/tag/mongodb/",{loader:()=>a.e(9416).then(a.bind(a,8551)),meta:{t:"标签: MongoDB",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(6080).then(a.bind(a,6670)),meta:{t:"标签: 基础",I:!1}}],["/tag/%E5%8E%9F%E7%90%86/",{loader:()=>a.e(4915).then(a.bind(a,8090)),meta:{t:"标签: 原理",I:!1}}],["/tag/%E6%BA%90%E7%A0%81/",{loader:()=>a.e(7753).then(a.bind(a,8382)),meta:{t:"标签: 源码",I:!1}}],["/tag/%E7%A6%81%E7%94%A8/",{loader:()=>a.e(1331).then(a.bind(a,2630)),meta:{t:"标签: 禁用",I:!1}}],["/tag/%E5%8A%A0%E5%AF%86/",{loader:()=>a.e(8496).then(a.bind(a,5637)),meta:{t:"标签: 加密",I:!1}}],["/tag/%E5%B8%83%E5%B1%80/",{loader:()=>a.e(609).then(a.bind(a,8661)),meta:{t:"标签: 布局",I:!1}}],["/tag/markdown/",{loader:()=>a.e(7931).then(a.bind(a,7301)),meta:{t:"标签: Markdown",I:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(8221).then(a.bind(a,721)),meta:{t:"标签: 页面配置",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(1431).then(a.bind(a,5198)),meta:{t:"标签: 使用指南",I:!1}}],["/tag/rpc/",{loader:()=>a.e(5121).then(a.bind(a,2871)),meta:{t:"标签: RPC",I:!1}}],["/tag/docker/",{loader:()=>a.e(4446).then(a.bind(a,9968)),meta:{t:"标签: docker",I:!1}}],["/tag/k8s/",{loader:()=>a.e(674).then(a.bind(a,8502)),meta:{t:"标签: k8s",I:!1}}],["/tag/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/",{loader:()=>a.e(9661).then(a.bind(a,7971)),meta:{t:"标签: 图床搭建",I:!1}}],["/tag/github/",{loader:()=>a.e(2813).then(a.bind(a,1384)),meta:{t:"标签: Github",I:!1}}],["/tag/%E5%88%86%E5%B1%82%E6%A8%A1%E5%9E%8B/",{loader:()=>a.e(3042).then(a.bind(a,360)),meta:{t:"标签: 分层模型",I:!1}}],["/tag/%E5%88%86%E5%B1%82%E5%8D%8F%E8%AE%AE/",{loader:()=>a.e(8995).then(a.bind(a,7468)),meta:{t:"标签: 分层协议",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/",{loader:()=>a.e(7e3).then(a.bind(a,5172)),meta:{t:"标签: 文件管理",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{loader:()=>a.e(2516).then(a.bind(a,9875)),meta:{t:"标签: 内存管理",I:!1}}],["/tag/%E8%BF%9B%E7%A8%8B/",{loader:()=>a.e(6628).then(a.bind(a,1146)),meta:{t:"标签: 进程",I:!1}}],["/tag/mysql%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(9398).then(a.bind(a,5008)),meta:{t:"标签: MySQL基础",I:!1}}],["/tag/%E7%B4%A2%E5%BC%95/",{loader:()=>a.e(9043).then(a.bind(a,1672)),meta:{t:"标签: 索引",I:!1}}],["/tag/%E6%97%A5%E5%BF%97/",{loader:()=>a.e(602).then(a.bind(a,8483)),meta:{t:"标签: 日志",I:!1}}],["/tag/%E4%BA%8B%E5%8A%A1/",{loader:()=>a.e(5426).then(a.bind(a,6945)),meta:{t:"标签: 事务",I:!1}}],["/tag/jvm/",{loader:()=>a.e(5837).then(a.bind(a,8059)),meta:{t:"标签: JVM",I:!1}}],["/tag/java%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(2488).then(a.bind(a,2193)),meta:{t:"标签: Java基础",I:!1}}],["/tag/%E6%95%B0%E7%BB%84/",{loader:()=>a.e(5494).then(a.bind(a,1984)),meta:{t:"标签: 数组",I:!1}}],["/tag/%E5%93%88%E5%B8%8C%E8%A1%A8/",{loader:()=>a.e(5758).then(a.bind(a,2728)),meta:{t:"标签: 哈希表",I:!1}}],["/tag/%E9%93%BE%E8%A1%A8/",{loader:()=>a.e(6068).then(a.bind(a,388)),meta:{t:"标签: 链表",I:!1}}],["/tag/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/",{loader:()=>a.e(6296).then(a.bind(a,5907)),meta:{t:"标签: 栈和队列",I:!1}}],["/tag/%E5%8F%8C%E6%8C%87%E9%92%88/",{loader:()=>a.e(2433).then(a.bind(a,6783)),meta:{t:"标签: 双指针",I:!1}}],["/tag/%E6%A0%91/",{loader:()=>a.e(1713).then(a.bind(a,3772)),meta:{t:"标签: 树",I:!1}}],["/tag/%E5%9B%BE/",{loader:()=>a.e(5104).then(a.bind(a,4836)),meta:{t:"标签: 图",I:!1}}],["/tag/%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/",{loader:()=>a.e(8922).then(a.bind(a,3278)),meta:{t:"标签: 归并算法",I:!1}}],["/tag/%E5%A0%86/",{loader:()=>a.e(5672).then(a.bind(a,6684)),meta:{t:"标签: 堆",I:!1}}],["/tag/%E7%9F%A9%E9%98%B5/",{loader:()=>a.e(8395).then(a.bind(a,6824)),meta:{t:"标签: 矩阵",I:!1}}],["/tag/%E7%AE%97%E6%B3%95/",{loader:()=>a.e(5874).then(a.bind(a,200)),meta:{t:"标签: 算法",I:!1}}],["/tag/%E5%85%AB%E8%82%A1/",{loader:()=>a.e(6514).then(a.bind(a,2973)),meta:{t:"标签: 八股",I:!1}}],["/tag/%E9%A1%B9%E7%9B%AE/",{loader:()=>a.e(3373).then(a.bind(a,5070)),meta:{t:"标签: 项目",I:!1}}],["/tag/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/",{loader:()=>a.e(6727).then(a.bind(a,6400)),meta:{t:"标签: 快速排序",I:!1}}],["/tag/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/",{loader:()=>a.e(6051).then(a.bind(a,6859)),meta:{t:"标签: 选择排序",I:!1}}],["/tag/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/",{loader:()=>a.e(8572).then(a.bind(a,3059)),meta:{t:"标签: 冒泡排序",I:!1}}],["/tag/%E5%A0%86%E6%8E%92%E5%BA%8F/",{loader:()=>a.e(6807).then(a.bind(a,7291)),meta:{t:"标签: 堆排序",I:!1}}],["/tag/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/",{loader:()=>a.e(6609).then(a.bind(a,5193)),meta:{t:"标签: 归并排序",I:!1}}],["/tag/%E6%A1%B6%E6%8E%92%E5%BA%8F/",{loader:()=>a.e(3687).then(a.bind(a,6949)),meta:{t:"标签: 桶排序",I:!1}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,9574)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(7199).then(a.bind(a,3639)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,3931)),meta:{t:"时间轴",I:!1}}]])},8761:(i,s,a)=>{a.d(s,{U:()=>t});const t=JSON.parse('{"base":"/","lang":"zh-CN","title":"首页","description":"Cutewr的博客首页","head":[["link",{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["link",{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}],["link",{"href":"https://fonts.googleapis.com/css2?family=Zhi+Mang+Xing&display=swap","rel":"stylesheet"}],["link",{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["link",{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}],["link",{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200..900&family=Zhi+Mang+Xing&display=swap","rel":"stylesheet"}],["link",{"href":"https://chinese-fonts-cdn.deno.dev/packages/cqscbbt/dist/YunFengZiKuZhongQingShanChengBangBangTi-2/result.css","rel":"stylesheet"}],["link",{"href":"https://chinese-fonts-cdn.deno.dev/packages/yozai/dist/Yozai-Medium/result.css","rel":"stylesheet"}]],"locales":{}}')},6653:(i,s,a)=>{a.d(s,{K:()=>t});const t=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$HYCo08SAGhAK8wqJeVgnJeB6ut8O3Ha0Ws64eAEWtGtAyWt4jDz6y"],"/posts/interview/":["$2a$10$tT2TmtcoUksOrlXxTZqHteXCModyfR/EbBAsc6HddBT2hVDGMSyHG"]}},"author":{"name":"Cutewr","url":"https://cutewr.github.io"},"logo":"assets/icon/logo_round.png","repo":"Cutewr","docsDir":"src","footer":"默认页脚","displayFooter":true,"blog":{"description":"To be a better Javaer","intro":"/intro.html","medias":{"QQ":"https://github.com/Cutewr/blogimage/blob/main/img/QQ_qrcode.jpg","Wechat":"https://github.com/Cutewr/blogimage/blob/main/img/WX_qrcode.png","GitHub":"https://github.com/Cutewr","Gitee":"https://example.com","Email":"2574303446@qq.com","Gmail":"cutewr2003@gamil.com","Weibo":"https://example.com","Zhihu":"https://example.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/","/demo/","/SpringBoot/",{"text":"Java","prefix":"posts/Java/","children":[{"text":"Java基础","link":"JavaBasic"},{"text":"Java集合","link":"JavaCollection"},{"text":"Java并发编程","link":"JUC"},{"text":"Java虚拟机","link":"JVM"}]},{"text":"刷题笔记","prefix":"posts/LCNotes/","children":[{"text":"数组","link":"1array"},{"text":"矩阵【二维数组】","link":"matrix"},{"text":"哈希表","link":"3hash"},{"text":"链表","link":"4linkedlist"},{"text":"栈和队列","link":"5stack"},{"text":"双指针","link":"6double"},{"text":"树","link":"7tree"},{"text":"图","link":"8graph"},{"text":"多路归并","link":"K-wayMerge"},{"text":"排序算法","prefix":"Sort/","children":[{"text":"快速排序的基准选取及优化","link":"快速排序的基准选取及优化"},{"text":"排序算法总结","link":"排序算法总结"},{"text":"MySQL日志","link":"3log"},{"text":"MySQL事务","link":"4transaction"}]}]},{"text":"数据库","prefix":"DataBase/","children":[{"text":"MySQL","prefix":"MySQL/","children":[{"text":"MySQL基础","link":"1basic"},{"text":"MySQL索引","link":"2index"},{"text":"MySQL日志","link":"3log"},{"text":"MySQL事务","link":"4transaction"}]},{"text":"Redis","prefix":"Redis/","children":[{"text":"Redis基础","link":"1"},{"text":"Redis线程模型","link":"2"},{"text":"Redis持久化","link":"2"},{"text":"Redis生产问题","link":"2"}]},{"text":"MongoDB","link":"MongoDB"}]},{"text":"计算机基础","prefix":"408/","children":[{"text":"计算机网络","prefix":"ComputerNetwork/","children":[{"text":"计算机网络分层模型","link":"Part"},{"text":"计算机网络各层协议","link":"protocol"}]},{"text":"操作系统","prefix":"OS/","children":[{"text":"进程管理","link":"process"},{"text":"内存管理","link":"memory"},{"text":"文件管理","link":"file"}]}]},{"text":"面试复盘","prefix":"posts/interview/","children":[{"text":"八股问答","link":"knows"},{"text":"项目问答","link":"project"},{"text":"算法题","link":"algorithm"}]},"/其他博客/"],"sidebar":{"/408/":[{"text":"计算机基础","icon":"book","children":[{"expanded":true,"collapsible":true,"text":"计算机网络","prefix":"ComputerNetwork/","children":[{"text":"计算机网络分层模型","link":"Part"},{"text":"计算机网络各层协议","link":"protocol"}]},{"expanded":true,"collapsible":true,"text":"操作系统","prefix":"OS/","children":[{"text":"进程管理","link":"process"},{"text":"内存管理","link":"memory"},{"text":"文件管理","link":"file"}]}]}],"/SpringBoot/":[{"expanded":true,"collapsible":true,"text":"SpringBoot系列","children":"structure"}],"/其他博客/":[{"expanded":true,"collapsible":true,"text":"其他博客","children":"structure"}],"/posts/Java/":[{"expanded":true,"collapsible":true,"text":"Java","children":"structure"}],"/posts/interview/":[{"expanded":true,"collapsible":true,"text":"面试复盘","children":"structure"}],"/posts/LCNotes/":[{"expanded":true,"collapsible":true,"text":"刷题笔记","icon":"book","children":["1array.md","matrix.md","3hash.md","4linkedlist.md","5stack.md","6double.md","7tree.md","8graph.md","K-wayMerge.md"]},{"expanded":true,"collapsible":true,"prefix":"Sort/","text":"排序算法","icon":"book","children":"structure"}],"/DataBase/":[{"expanded":true,"collapsible":true,"text":"数据库","icon":"book","children":"structure"}],"/":[{"text":"如何使用","icon":"laptop-code","prefix":"demo/","link":"demo/","children":"structure"},{"text":"文章","icon":"book","prefix":"posts/","children":"structure"},"intro",{"text":"幻灯片","icon":"person-chalkboard","link":"https://plugin-md-enhance.vuejs.press/zh/guide/content/revealjs/demo.html"}]}}}}')},8123:(i,s,a)=>{a.d(s,{v:()=>t});const t={"/SpringBoot/":["SpringBoot内嵌web容器","SpringBoot内嵌web容器2"],"/其他博客/":["/%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2/Github_picGo%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.html"],"/posts/Java/":["JavaBasic","JavaCollection","JUC","JVM"],"/posts/interview/":["knows","algorithm","project"],"/posts/LCNotes/Sort/":["快速排序的基准选取及优化","排序算法总结"],"/DataBase/":["MongoDB",{text:"My SQL",prefix:"MySQL/",collapsible:!0,children:["4transaction","1basic","3log","2index"]}],"/demo/":["markdown","layout","page","disable","encrypt"],"/posts/":[{text:"Interview",prefix:"interview/",collapsible:!0,children:["knows","algorithm","project"]},{text:"Java",prefix:"Java/",collapsible:!0,children:["JavaBasic","JavaCollection","JUC","JVM"]},{text:"LCNotes",prefix:"LCNotes/",collapsible:!0,children:[{text:"Sort",prefix:"Sort/",collapsible:!0,children:["快速排序的基准选取及优化","排序算法总结"]},"6double","3hash","8graph","K-wayMerge","1array","5stack","7tree","matrix","4linkedlist"]},"RPC"]}},2878:(i,s,a)=>{a.d(s,{P:()=>t});const t={QQ:'<svg xmlns="http://www.w3.org/2000/svg" class="icon qq-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#5eaade"/><path fill="#fff" d="M805.25 585.542c-15-48.188-32.25-88.688-58.781-154.97 4.125-174.093-68.25-314.905-234.938-314.905-168.562 0-239.344 143.625-234.844 314.906-26.625 66.375-43.78 106.594-58.78 154.969-31.876 102.656-21.563 145.125-13.688 146.062 16.875 2.063 65.718-77.25 65.718-77.25 0 45.938 23.625 105.844 74.813 149.063-24.75 7.593-80.344 28.03-67.125 50.437 10.688 18.094 183.938 11.531 233.906 5.906 49.969 5.625 223.219 12.188 233.906-5.906 13.22-22.312-42.468-42.844-67.125-50.437 51.188-43.313 74.813-103.22 74.813-149.063 0 0 48.844 79.313 65.719 77.25 7.969-1.031 18.281-43.5-13.594-146.062z"/></svg>',Wechat:'<svg xmlns="http://www.w3.org/2000/svg" class="icon wechat-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2AAE67"/><path fill="#FFF" d="M501 417c-14 0-25-12-25-26s11-26 25-26 26 12 26 26-12 26-26 26m-144 0c-15 0-26-12-26-26s11-26 26-26 25 12 25 26-11 26-25 26m72-150c-120 0-217 82-217 183 0 55 29 104 75 138a15 15 0 0 1 6 11l-1 5-9 37-2 5c0 4 4 8 8 8l4-2 47-27c4-3 8-4 12-4l6 1a255 255 0 0 0 83 10c-5-14-7-29-7-45 0-92 88-166 197-166h9c-16-87-103-154-211-154"/><path fill="#FFF" d="M692 561c-13 0-23-10-23-23 0-12 10-22 23-22 12 0 22 10 22 22 0 13-10 23-22 23m-121 0c-12 0-23-10-23-23 0-12 11-22 23-22s23 10 23 22c0 13-11 23-23 23m179 141c38-28 62-69 62-115 0-84-81-152-181-152s-180 68-180 152 80 152 180 152a212 212 0 0 0 65-9l9 3 40 23 3 1a6 6 0 0 0 6-6l-1-5-8-30v-4c0-4 2-8 5-10"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Weibo:'<svg xmlns="http://www.w3.org/2000/svg" class="icon weibo-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#D52C2B"/><path fill="#D52C2B" d="M256 601c0 68 91 124 203 124 113 0 203-56 203-124s-90-123-203-123c-112 0-203 55-203 123"/><path fill="#FFF" d="M464 715c-99 9-185-35-191-98-7-64 68-123 168-133 99-10 185 34 191 98 7 64-69 123-168 133m199-212c-9-2-15-4-10-15 9-23 10-44 0-58-19-27-73-26-134-1 0 0-19 8-14-7 9-29 8-54-7-68-33-33-121 1-196 75-57 55-90 114-90 165 0 97 127 156 252 156 163 0 271-93 271-167 0-44-38-69-72-80m108-177c-39-43-98-59-151-48-13 3-20 14-18 27 3 12 15 19 27 17 39-8 80 3 108 34 27 29 36 70 24 108a22 22 0 0 0 14 28c12 4 25-3 29-14 18-53 5-112-33-152"/><path fill="#FFF" d="M711 379a78 78 0 0 0-74-23c-11 2-17 12-15 22v1c2 10 12 17 23 15a38 38 0 0 1 36 11c10 10 12 24 8 36a19 19 0 0 0 13 25c10 3 21-3 25-13a74 74 0 0 0-16-74M470 599c-4 6-12 9-18 6-6-2-7-8-4-14s11-9 17-6c6 2 8 8 5 14m-32 40a38 38 0 0 1-46 15c-15-7-20-25-10-39 10-15 29-21 45-15 15 7 20 24 11 39m36-106c-47-12-101 11-121 52-21 41-1 87 47 102 49 16 108-8 128-53 20-44-5-89-54-101"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}}},i=>{i.O(0,[7662,6193],(()=>i(i.s=8731))),i.O()}]);