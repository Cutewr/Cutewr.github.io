"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[3845],{6262:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,p]of t)r[e]=p;return r}},6880:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>n,data:()=>c});var p=r(641);const a=[(0,p.Fv)('<h1 id="rpc" tabindex="-1"><a class="header-anchor" href="#rpc"><span>RPC</span></a></h1><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><h3 id="什么是rpc" tabindex="-1"><a class="header-anchor" href="#什么是rpc"><span>什么是RPC?</span></a></h3><p>专业定义：RPC（Remote Procedure Call）即远程过程调用，是一种计算机通信协议，它允许程序在不同的计算机之间进行通信和交互，就像本地调用一样。</p><h3 id="为什么需要rpc" tabindex="-1"><a class="header-anchor" href="#为什么需要rpc"><span>为什么需要RPC</span></a></h3><p>RPC允许一个程序（称为服务消费者）像调用自己程序的方法一样，调用另一个程序（称为服务提供者）的接口，而不需要了解数据的传输处理过程、底层网络通信的细节等。这些都会由 RPC框架帮你完成，使得开发者可以轻松调用远程服务，快速开发分布式系统。</p><p>我的代码的目标，是能快速得到一个 支持远程调用provider的 代理对象，像调用本地方法一样调用provider的方法。</p><p>我们使用vertx作为web服务器。</p><p>先使用本地注册中心。</p><p>静态代理：为每一个特定类型的接口或对象，编写一个代理类。不过不是复制粘贴provider的UserServiceImpl中的方法，而是要构造HTTP请求调用provider。</p>',10)],o={},n=(0,r(6262).A)(o,[["render",function(e,t){return(0,p.uX)(),(0,p.CE)("div",null,a)}]]),c=JSON.parse('{"path":"/posts/RPC.html","title":"RPC","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-08-28T00:00:00.000Z","category":["中间件"],"tag":["RPC"],"description":"RPC 基本概念 什么是RPC? 专业定义：RPC（Remote Procedure Call）即远程过程调用，是一种计算机通信协议，它允许程序在不同的计算机之间进行通信和交互，就像本地调用一样。 为什么需要RPC RPC允许一个程序（称为服务消费者）像调用自己程序的方法一样，调用另一个程序（称为服务提供者）的接口，而不需要了解数据的传输处理过程、底层...","head":[["meta",{"property":"og:url","content":"https://cutewr.github.io/posts/RPC.html"}],["meta",{"property":"og:site_name","content":"首页"}],["meta",{"property":"og:title","content":"RPC"}],["meta",{"property":"og:description","content":"RPC 基本概念 什么是RPC? 专业定义：RPC（Remote Procedure Call）即远程过程调用，是一种计算机通信协议，它允许程序在不同的计算机之间进行通信和交互，就像本地调用一样。 为什么需要RPC RPC允许一个程序（称为服务消费者）像调用自己程序的方法一样，调用另一个程序（称为服务提供者）的接口，而不需要了解数据的传输处理过程、底层..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-29T01:38:29.000Z"}],["meta",{"property":"article:author","content":"Cutewr"}],["meta",{"property":"article:tag","content":"RPC"}],["meta",{"property":"article:published_time","content":"2024-08-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-29T01:38:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RPC\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-29T01:38:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cutewr\\",\\"url\\":\\"https://cutewr.github.io\\"}]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"什么是RPC?","slug":"什么是rpc","link":"#什么是rpc","children":[]},{"level":3,"title":"为什么需要RPC","slug":"为什么需要rpc","link":"#为什么需要rpc","children":[]}]}],"git":{"createdTime":1724840211000,"updatedTime":1724895509000,"contributors":[{"name":"Cutewr","email":"2574303446@qq.com","commits":2}]},"readingTime":{"minutes":1,"words":300},"filePathRelative":"posts/RPC.md","localizedDate":"2024年8月28日","excerpt":"\\n<h2>基本概念</h2>\\n<h3>什么是RPC?</h3>\\n<p>专业定义：RPC（Remote Procedure Call）即远程过程调用，是一种计算机通信协议，它允许程序在不同的计算机之间进行通信和交互，就像本地调用一样。</p>\\n<h3>为什么需要RPC</h3>\\n<p>RPC允许一个程序（称为服务消费者）像调用自己程序的方法一样，调用另一个程序（称为服务提供者）的接口，而不需要了解数据的传输处理过程、底层网络通信的细节等。这些都会由 RPC框架帮你完成，使得开发者可以轻松调用远程服务，快速开发分布式系统。</p>\\n<p>我的代码的目标，是能快速得到一个 支持远程调用provider的 代理对象，像调用本地方法一样调用provider的方法。</p>","autoDesc":true}')}}]);